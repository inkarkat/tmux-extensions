#!/bin/sh

printUsage()
{
    cat <<HELPTEXT
Activate the current Tmux pane and window (but not the terminal that Tmux is
running in), so that whatever is happening there becomes visible.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

if [ ! "$TMUX" ]; then
    echo >&2 'Not in a TMUX session!'
    exit 1
fi

# tmux sets an environment variable for the current pane, but we also need to
# return to the current window that hosts the pane, and for that there's no
# variable, unfortunately.
TMUX_WINDOW=$(tmux display-message -p '#{window_id}') || exit $?
exec tmux select-pane -t "$TMUX_PANE" \; select-window -t "$TMUX_WINDOW"
