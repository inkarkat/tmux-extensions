#!/bin/bash
set -o pipefail

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 'ERROR: Cannot determine script directory!'; exit 3; }
readonly projectDir="${scriptDir}/.."

: ${TMUX_KEYS_COLOR_MATCH_PREFIX=[43m}
: ${TMUX_KEYS_COLOR_MATCH_SUFFIX=[0m}
[ -t 1 ] || unset "${!TMUX_KEYS_COLOR_@}"

printUsage()
{
    cat <<HELPTEXT
List custom tmux key bindings [matching all of SEARCH-PATTERN, a sed-style basic
regular expresion].
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[SEARCH-PATTERN ...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

typeset -a configFiles=()
for conf in ~/.tmux.conf ~/.tmux/$(tmux -V | cut -d' ' -f2)/tmux.conf "${projectDir}/shell/wrappers.sh"
do
    [ -e "$conf" ] || continue
    configFiles+=("$conf")
done

getKeyBindings()
{
    sed -n -e '/^##[[:space:]]/{ s/^##/  /; p }' -- "${configFiles[@]}"
}

searchForArgument()
{
    local searchArg="${1//\//\\/}"; shift
    sed -n \
	-e :begin \
	-e '$!{ H; $!{ N; s/^[^\n]*\n//; /^   [^[:space:]]/!b begin }; }' \
	-e "x; /${searchArg}/{ s/^\n//; s/${searchArg}/${TMUX_KEYS_COLOR_MATCH_PREFIX}&${TMUX_KEYS_COLOR_MATCH_SUFFIX}/g; p }; s/.*//; x; \$!b begin" \

}
typeset -a searches=()
for searchArg
do
    searches+=('| searchForArgument' "$searchArg")
done

typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS); [ -t 1 ] || pager=()
eval 'getKeyBindings' "${searches[@]}" '| outputOrError' "${pager:+|}" '"${pager[@]}"'
